{
  "metadata": {
    "name": "New JSNB",
    "language_info": {
      "name": "JavaScipt",
      "version": "8.0"
    }
  },
  "jsnbversion": "v0.1",
  "cells": [
    {
      "code": "function initializeStyles() {\n    const styleSheet = document.createElement(\"style\");\n    styleSheet.textContent = `\n        body {\n            margin: 0;\n            min-height: 100vh;\n            background: linear-gradient(135deg, #00C9FF, #92FE9D);\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            color: white;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            overflow: hidden;\n        }\n        .game-container {\n            background: rgba(0, 0, 0, 0.2);\n            backdrop-filter: blur(10px);\n            padding: 2rem;\n            border-radius: 20px;\n            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n            text-align: center;\n            min-width: 400px;\n            max-width: 800px;\n            margin: 20px;\n        }\n        .game-title {\n            font-size: 3rem;\n            margin-bottom: 2rem;\n            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n            animation: bounce 1s infinite alternate;\n            color: #FFD700;\n        }\n        .button-container {\n            display: flex;\n            gap: 1rem;\n            justify-content: center;\n            margin-top: 2rem;\n            flex-wrap: wrap;\n        }\n        .game-button {\n            background: linear-gradient(45deg, #FF416C, #FF4B2B);\n            border: none;\n            padding: 1rem 2rem;\n            font-size: 1.2rem;\n            color: white;\n            border-radius: 25px;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\n            min-width: 150px;\n            text-transform: uppercase;\n            font-weight: bold;\n            letter-spacing: 1px;\n        }\n        .back-button {\n            background: linear-gradient(45deg, #4B4B4B, #2B2B2B);\n        }\n        .records-button {\n            background: linear-gradient(45deg, #4776E6, #8E54E9);\n        }\n        .game-button:hover {\n            transform: translateY(-2px);\n            opacity: 0.9;\n            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);\n        }\n        .game-button:active {\n            transform: translateY(1px);\n        }\n        .radio-group {\n            display: flex;\n            flex-direction: column;\n            gap: 1rem;\n            margin: 2rem 0;\n            align-items: center;\n        }\n        .radio-button {\n            cursor: pointer;\n            padding: 0.8rem 2rem;\n            background: rgba(255, 255, 255, 0.1);\n            border-radius: 10px;\n            transition: all 0.3s ease;\n            width: 200px;\n            text-align: center;\n            position: relative;\n            overflow: hidden;\n        }\n        .radio-button:hover {\n            background: rgba(255, 255, 255, 0.2);\n            transform: translateX(5px);\n        }\n        .radio-button input[type=\"radio\"] {\n            margin-right: 10px;\n        }\n        .game-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            margin-bottom: 2rem;\n            padding: 1rem;\n            background: rgba(255, 255, 255, 0.1);\n            border-radius: 15px;\n        }\n        .score-board, .timer {\n            font-size: 1.5rem;\n            background: rgba(255, 255, 255, 0.2);\n            padding: 0.5rem 1.5rem;\n            border-radius: 15px;\n            min-width: 120px;\n            text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);\n        }\n        #game-board {\n            display: grid;\n            grid-template-columns: repeat(3, 100px);\n            grid-template-rows: repeat(3, 100px);\n            gap: 10px;\n            margin: 2rem auto;\n            background: rgba(255, 255, 255, 0.1);\n            padding: 10px;\n            border-radius: 10px;\n            width: fit-content;\n        }\n        .hole {\n            width: 100px;\n            height: 100px;\n            position: relative;\n            border-radius: 15px;\n            background: linear-gradient(45deg, #2c3e50, #3498db);\n            box-shadow: inset 0 0 10px rgba(0,0,0,0.5);\n            cursor: pointer;\n            overflow: hidden;\n            transition: transform 0.2s;\n        }\n        .hole:hover {\n            transform: scale(1.02);\n        }\n        .mole {\n            width: 100%;\n            height: 100%;\n            position: absolute;\n            bottom: -100px;\n            left: 0;\n            transition: bottom 0.3s ease-out;\n            object-fit: contain;\n            background: white;\n            border-radius: 15px;\n        }\n        .records-container {\n            background: rgba(255, 255, 255, 0.1);\n            padding: 1rem;\n            border-radius: 10px;\n            margin-top: 1rem;\n        }\n        .record-item {\n            display: flex;\n            justify-content: space-between;\n            padding: 0.8rem;\n            border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n            font-size: 1.2rem;\n        }\n        .record-item:last-child {\n            border-bottom: none;\n        }\n        @keyframes bounce {\n            from { transform: translateY(0); }\n            to { transform: translateY(-10px); }\n        }\n        @keyframes floatUp {\n            0% { transform: translateY(0); opacity: 1; }\n            100% { transform: translateY(-20px); opacity: 0; }\n        }\n        .score-popup {\n            position: absolute;\n            color: #FFD700;\n            font-size: 24px;\n            font-weight: bold;\n            animation: floatUp 0.5s ease-out;\n            z-index: 100;\n            pointer-events: none;\n        }\n        .countdown {\n            position: fixed;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            font-size: 100px;\n            color: #FFD700;\n            text-shadow: 2px 2px 4px rgba(0,0,0,0.5);\n            z-index: 1000;\n            animation: bounce 0.5s infinite alternate;\n        }\n        .overlay {\n            position: fixed;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            background: rgba(0,0,0,0.8);\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            z-index: 1000;\n        }\n        .message-box {\n            background: linear-gradient(45deg, #2c3e50, #3498db);\n            padding: 2rem;\n            border-radius: 20px;\n            text-align: center;\n            animation: bounce 0.5s infinite alternate;\n        }\n        .high-score-box {\n            background: linear-gradient(45deg, #FFD700, #FFA500);\n        }\n    `;\n    document.head.appendChild(styleSheet);\n}\n// Game state variables\nlet score = 0;\nlet moleTimer;\nlet gameActive = false;\nlet timeLeft;\nlet timerInterval;\nlet missedRounds = 0;\nlet moleImage = \"https://i.postimg.cc/1zmY1x64/Normal.jpg\";\n// High scores object\nconst highScores = {\n    '10': 0,\n    '30': 0,\n    '60': 0,\n    '300': 0\n};\n\nfunction createStartPage() {\n    document.body.innerHTML = `\n        <div class=\"game-container\">\n            <h1 class=\"game-title\"> Whack-a-Mole </h1>\n            <div class=\"start-menu\">\n                <h3>Select Game Duration</h3>\n                <form id=\"game-settings\">\n                    <div class=\"radio-group\">\n                        <label class=\"radio-button\">\n                            <input type=\"radio\" name=\"time-limit\" value=\"10\" required>\n                            <span>10 seconds</span>\n                        </label>\n                        <label class=\"radio-button\">\n                            <input type=\"radio\" name=\"time-limit\" value=\"30\">\n                            <span>30 seconds</span>\n                        </label>\n                        <label class=\"radio-button\">\n                            <input type=\"radio\" name=\"time-limit\" value=\"60\">\n                            <span>1 minute</span>\n                        </label>\n                        <label class=\"radio-button\">\n                            <input type=\"radio\" name=\"time-limit\" value=\"300\">\n                            <span>5 minutes</span>\n                        </label>\n                    </div>\n                    <div class=\"button-container\">\n                        <button type=\"button\" id=\"start-game\" class=\"game-button\">Start Game</button>\n                        <button type=\"button\" id=\"show-records\" class=\"game-button records-button\">Records</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    `;\n\n    document.getElementById(\"start-game\").onclick = startGame;\n    document.getElementById(\"show-records\").onclick = showRecords;\n}\n\nfunction showRecords() {\n    document.body.innerHTML = `\n        <div class=\"game-container\">\n            <h1 class=\"game-title\">High Scores</h1>\n            <div class=\"records-container\">\n                <div class=\"record-item\">\n                    <span>10 seconds:</span>\n                    <span>${highScores['10']}</span>\n                </div>\n                <div class=\"record-item\">\n                    <span>30 seconds:</span>\n                    <span>${highScores['30']}</span>\n                </div>\n                <div class=\"record-item\">\n                    <span>1 minute:</span>\n                    <span>${highScores['60']}</span>\n                </div>\n                <div class=\"record-item\">\n                    <span>5 minutes:</span>\n                    <span>${highScores['300']}</span>\n                </div>\n            </div>\n            <div class=\"button-container\">\n                <button class=\"game-button back-button\" onclick=\"createStartPage()\">Back to Menu</button>\n            </div>\n        </div>\n    `;\n}\n\nfunction startGame() {\n    const selectedTime = document.querySelector('input[name=\"time-limit\"]:checked');\n    if (!selectedTime) {\n        alert(\"Please select a game duration!\");\n        return;\n    }\n    const gameDuration = parseInt(selectedTime.value) * 1000;\n    createGamePage(gameDuration);\n}\n\nfunction createGamePage(gameDuration) {\n    document.body.innerHTML = `\n        <div class=\"game-container\">\n            <div class=\"game-header\">\n                <div class=\"score-board\">Score: <span id=\"score\">0</span></div>\n                <div class=\"timer\" id=\"timer\">Time: ${gameDuration/1000}s</div>\n            </div>\n            <div id=\"game-board\"></div>\n            <div class=\"button-container\">\n                <button id=\"start-btn\" class=\"game-button\">Start Game</button>\n                <button class=\"game-button back-button\" onclick=\"confirmQuit()\">Back to Menu</button>\n            </div>\n        </div>\n    `;\n\n    const gameBoard = document.getElementById('game-board');\n    for (let i = 1; i <= 9; i++) {\n        const hole = document.createElement('div');\n        hole.classList.add('hole');\n        hole.innerHTML = `<img src=\"https://i.postimg.cc/1zmY1x64/Normal.jpg\" alt=\"mole\" class=\"mole\" />`;\n        gameBoard.appendChild(hole);\n    }\n\n    document.getElementById('start-btn').onclick = () => {\n        if (!gameActive) {\n            startWhackAMole(gameDuration);\n        }\n    };\n}\n\nfunction confirmQuit() {\n    if (gameActive) {\n        if (confirm(\"Are you sure you want to quit? Your progress will be lost!\")) {\n            createStartPage();\n        }\n    } else {\n        createStartPage();\n    }\n}\n\nfunction updateTimer() {\n    timeLeft -= 1000;\n    const timerElement = document.getElementById('timer');\n    if (timerElement) {\n        timerElement.textContent = `Time: ${timeLeft/1000}s`;\n    }\n    if (timeLeft <= 0) {\n        endGame();\n    }\n}\n\nfunction showMole() {\n    const holes = document.querySelectorAll('.hole');\n    holes.forEach(hole => {\n        const mole = hole.querySelector('.mole');\n        mole.style.bottom = '-100px';\n        mole.src = moleImage;\n        mole.onclick = null;\n    });\n\n    const randomHole = holes[Math.floor(Math.random() * holes.length)];\n    const mole = randomHole.querySelector('.mole');\n    mole.src = moleImage;\n    mole.style.bottom = '0';\n    let moleHit = false;\n\n    mole.onclick = () => {\n        if (gameActive && !moleHit) {\n            moleHit = true;\n            score++;\n            document.getElementById('score').textContent = score;\n            missedRounds = 0;\n            mole.src = 'https://i.postimg.cc/G2NMDHfs/angry.jpg';\n            \n            // Hit animation\n            mole.style.transform = 'scale(0.95)';\n            setTimeout(() => {\n                mole.style.transform = 'scale(1)';\n                mole.style.bottom = '-100px';\n            }, 200);\n            \n            // Score popup\n            const scorePopup = document.createElement('div');\n            scorePopup.textContent = '+1';\n            scorePopup.className = 'score-popup';\n            randomHole.appendChild(scorePopup);\n            setTimeout(() => scorePopup.remove(), 500);\n        }\n    };\n\n    const moleShowTime = Math.max(800 - (score * 10), 400);\n    setTimeout(() => {\n        if (!moleHit && gameActive) {\n            missedRounds++;\n            moleImage = missedRounds >= 3 ? \n                'https://i.postimg.cc/1zmY1x64/Normal.jpg' : \n                'https://i.postimg.cc/ZR070rwS/happy.jpg';\n            mole.src = moleImage;\n            setTimeout(() => {\n                mole.style.bottom = '-100px';\n            }, 200);\n        }\n    }, moleShowTime);\n}\n\nfunction startWhackAMole(gameDuration) {\n    score = 0;\n    document.getElementById('score').textContent = score;\n    gameActive = true;\n    timeLeft = gameDuration;\n    missedRounds = 0;\n    moleImage = 'https://i.postimg.cc/1zmY1x64/Normal.jpg';\n    \n    const startBtn = document.getElementById('start-btn');\n    startBtn.style.display = 'none';\n    \n    // Add countdown\n    const countdown = document.createElement('div');\n    countdown.className = 'countdown';\n    document.body.appendChild(countdown);\n\n    let count = 3;\n    const countdownInterval = setInterval(() => {\n        if (count > 0) {\n            countdown.textContent = count;\n            count--;\n        } else {\n            countdown.textContent = 'GO!';\n            setTimeout(() => {\n                countdown.remove();\n                moleTimer = setInterval(showMole, 1000);\n                timerInterval = setInterval(updateTimer, 1000);\n            }, 500);\n            clearInterval(countdownInterval);\n        }\n    }, 1000);\n}\n\nfunction endGame() {\n    clearInterval(moleTimer);\n    clearInterval(timerInterval);\n    gameActive = false;\n    moleImage = 'https://i.postimg.cc/1zmY1x64/Normal.jpg';\n    \n    const finalScore = score;\n    const duration = timeLeft/1000;\n    \n    if (finalScore > highScores[duration]) {\n        highScores[duration] = finalScore;\n        showNewHighScore(finalScore);\n    } else {\n        showGameOver(finalScore);\n    }\n}\n\nfunction showNewHighScore(finalScore) {\n    const overlay = document.createElement('div');\n    overlay.className = 'overlay';\n    \n    const message = document.createElement('div');\n    message.className = 'message-box high-score-box';\n    message.innerHTML = `\n        <h2> NEW HIGH SCORE! </h2>\n        <p>Your Score: ${finalScore}</p>\n        <button class=\"game-button\" onclick=\"createStartPage()\">Back to Menu</button>\n    `;\n    \n    overlay.appendChild(message);\n    document.body.appendChild(overlay);\n}\n\nfunction showGameOver(finalScore) {\n    const overlay = document.createElement('div');\n    overlay.className = 'overlay';\n    \n    const message = document.createElement('div');\n    message.className = 'message-box';\n    message.innerHTML = `\n        <h2>Game Over!</h2>\n        <p>Your Score: ${finalScore}</p>\n        <button class=\"game-button\" onclick=\"createStartPage()\">Back to Menu</button>\n    `;\n    \n    overlay.appendChild(message);\n    document.body.appendChild(overlay);\n}\n\n// Initialize the game\ninitializeStyles();\ncreateStartPage();",
      "status": "",
      "output": "",
      "type": "code"
    }
  ],
  "source": "https://github.com/gopi-suvanam/jsnb",
  "run_on_load": false
}